package com.example.batch;

import org.springframework.batch.core.listener.JobExecutionListenerSupport;
import org.springframework.stereotype.Component;
import org.springframework.batch.core.BatchStatus;
import org.springframework.batch.core.JobExecution;

@Component
public class JobCompletionNotificationListener extends JobExecutionListenerSupport {
    private final JdbcTemplate jdbcTemplate;

    @Autowired
    public JobCompletionNotificationListener(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    public void afterJob(JobExecution jobExecution) {
        if (jobExecution.getStatus() == BatchStatus.COMPLETED) {
            // Job completed successfully
            // Add post-job completion logic here
            System.out.println("Job completed successfully. All records have been processed.");
            // You can also send a notification email, log to a file, etc.
        } else if (jobExecution.getStatus() == BatchStatus.FAILED) {
            // Job failed
            System.out.println("Job failed with the following exception: " + jobExecution.getAllFailureExceptions());
        }
    }
}
